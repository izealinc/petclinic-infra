/*
node {
    timestamps {
        deleteDir()
        stage('Determine Itinerary for pipeline') {
            echo 'Hello World'
        }
        stage('Perform Application build') {
            echo 'Building petclinic project'
            git credentialsId: 'd8ebe5d2-4472-4c95-a644-1ab88805b2b1', poll: false, url: 'https://github.com/izealinc/petclinic.git'
            bat ".\\mvnw versions:set -DnewVersion=1.5.1-SNAPSHOT"
            bat ".\\mvnw package"
        }
        try{
             wrap([$class: 'AnsiColorBuildWrapper']) {
                " Change color \u001B[31m I'm Red \u2717 \u001B[0m Now not "
                }
            }
        } catch (Exception e){
            echo 'Lets move on after the exception'
        }

        for(i=1; i <= 4; i++) {
            String currentEnv = 'Env ' + i
            stage("Deploy application to ${currentEnv}") {
                echo 'Hello World'
            }
            stage("Load rules metadata for ${currentEnv}") {
                echo 'Hello World'
            }
            stage("Determine Itinerary for ${currentEnv}") {
                echo 'Hello World'
            }


           // processStage(currentEnv)
        }
    }
}

*/
/*

def processStage(String currentEnv) {
    stage("Deploy application to ${currentEnv}") {
        echo 'Hello World'
    }
    stage("Losd rules metadata for ${currentEnv}") {
        echo 'Hello World'
    }
    stage("Determine Itinerary for ${currentEnv}") {
        echo 'Hello World'
    }
}

*/